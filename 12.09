2e1@DESKTOP-6NH5U1T MINGW64 ~
$ cd po

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ touch test.txt

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ ls
README.md  test.txt

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ echo "nowe repo" > test.txt

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ ls
README.md  test.txt

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ cat test.txt
nowe repo

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ ^C

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test.txt

nothing added to commit but untracked files present (use "git add" to track)

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ git add*
git: 'add*' is not a git command. See 'git --help'.

The most similar command is
        add

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ git add *
warning: in the working copy of 'test.txt', LF will be replaced by CRLF the next time Git touches it

2e1@DESKTOP-6NH5U1T MINGW64 ~/po (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   test.txt

